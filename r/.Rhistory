resultData = read.csv("~/git/SIA/solution.csv", header = FALSE, sep = ",", dec = ".")
x = locationsData$x
y = locationsData$y
solution = resultData$V1
if(TRUE){
png("~/git/SIA/r/img.png", width=800, height=800)
}
# Graph the cars vector with all defaults
plot(x,y,pch=20, ylim=c(0,60), xlim=c(0,60))
range=10
#  for (i in 1:9){
#    points(x[i],y[i],col=rgb(1,0,0),pch=20)
#    rect(x[i]-range, y[i]-range, x[i]+range, y[i]+range, col=rgb(1,0,0,alpha =0.6),lty=1,lwd=0.3)
# }
for (i in 1:length(solution)){
if (solution[i]==1){
points(x[i],y[i],col=rgb(1,0,0),pch=20)
rect(x[i]-range, y[i]-range, x[i]+range, y[i]+range, col=rgb(1,0,0,alpha =0.6),lty=1,lwd=0.3)
#draw.circle(x[i],y[i],range,border="purple",col=rgb(1,0,0,alpha =0.6),lty=1,lwd=1)
}
}
dev.off()
library(plotrix)
locationsData = read.csv("~/git/SIA/locations.csv", header = TRUE, sep = ",", dec = ".")
resultData = read.csv("~/git/SIA/solution.csv", header = FALSE, sep = ",", dec = ".")
x = locationsData$x
y = locationsData$y
solution = resultData$V1
if(TRUE){
png("~/git/SIA/r/img.png", width=800, height=800)
}
# Graph the cars vector with all defaults
plot(x,y,pch=20, ylim=c(0,60), xlim=c(0,60))
range=10
#  for (i in 1:9){
#    points(x[i],y[i],col=rgb(1,0,0),pch=20)
#    rect(x[i]-range, y[i]-range, x[i]+range, y[i]+range, col=rgb(1,0,0,alpha =0.6),lty=1,lwd=0.3)
# }
for (i in 1:length(solution)){
if (solution[i]==1){
points(x[i],y[i],col=rgb(1,0,0),pch=20)
rect(x[i]-range, y[i]-range, x[i]+range, y[i]+range, col=rgb(1,0,0,alpha =0.6),lty=1,lwd=0.3)
#draw.circle(x[i],y[i],range,border="purple",col=rgb(1,0,0,alpha =0.6),lty=1,lwd=1)
}
}
dev.off()
library(plotrix)
locationsData = read.csv("~/git/SIA/locations.csv", header = TRUE, sep = ",", dec = ".")
resultData = read.csv("~/git/SIA/solution.csv", header = FALSE, sep = ",", dec = ".")
x = locationsData$x
y = locationsData$y
solution = resultData$V1
if(TRUE){
png("~/git/SIA/r/img.png", width=800, height=800)
}
# Graph the cars vector with all defaults
plot(x,y,pch=20, ylim=c(0,60), xlim=c(0,60))
range=10
#  for (i in 1:9){
#    points(x[i],y[i],col=rgb(1,0,0),pch=20)
#    rect(x[i]-range, y[i]-range, x[i]+range, y[i]+range, col=rgb(1,0,0,alpha =0.6),lty=1,lwd=0.3)
# }
for (i in 1:length(solution)){
if (solution[i]==1){
points(x[i],y[i],col=rgb(1,0,0),pch=20)
rect(x[i]-range, y[i]-range, x[i]+range, y[i]+range, col=rgb(1,0,0,alpha =0.6),lty=1,lwd=0.3)
#draw.circle(x[i],y[i],range,border="purple",col=rgb(1,0,0,alpha =0.6),lty=1,lwd=1)
}
}
dev.off()
library(plotrix)
locationsData = read.csv("~/git/SIA/locations.csv", header = TRUE, sep = ",", dec = ".")
resultData = read.csv("~/git/SIA/solution.csv", header = FALSE, sep = ",", dec = ".")
x = locationsData$x
y = locationsData$y
solution = resultData$V1
toImage = FALSE;
if(toImage) png("~/git/SIA/r/img.png", width=800, height=800)
# Graph the cars vector with all defaults
plot(x,y,pch=20, ylim=c(0,60), xlim=c(0,60))
range=10
#  for (i in 1:9){
#    points(x[i],y[i],col=rgb(1,0,0),pch=20)
#    rect(x[i]-range, y[i]-range, x[i]+range, y[i]+range, col=rgb(1,0,0,alpha =0.6),lty=1,lwd=0.3)
# }
for (i in 1:length(solution)){
if (solution[i]==1){
points(x[i],y[i],col=rgb(1,0,0),pch=20)
rect(x[i]-range, y[i]-range, x[i]+range, y[i]+range, col=rgb(1,0,0,alpha =0.6),lty=1,lwd=0.3)
#draw.circle(x[i],y[i],range,border="purple",col=rgb(1,0,0,alpha =0.6),lty=1,lwd=1)
}
}
if(toImage) dev.off()
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#towns <- data.frame(lon = sample(100), lat = sample(100))
towns <- read.csv("~/git/SIA/locations.csv", header = TRUE, sep = ",", dec = ".")
towns <- SpatialPoints(towns)
# Create sample polygon grid
grd <- GridTopology(c(1,1), c(10,10), c(10,10))
polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
plot(polys)
# Add towns (in red colour)
plot(towns, add = TRUE, col = 'red')
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#towns <- data.frame(lon = sample(100), lat = sample(100))
towns <- read.csv("~/git/SIA/locations.csv", header = TRUE, sep = ",", dec = ".")
towns <- SpatialPoints(towns)
# Create sample polygon grid
grd <- GridTopology(c(1,1), c(10,10), c(10,10))
polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
plot(polys)
# Add towns (in red colour)
plot(towns, add = TRUE, col = 'red')
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#towns <- data.frame(lon = sample(100), lat = sample(100))
towns <- read.csv("~/git/SIA/locations.csv", header = TRUE, sep = ",", dec = ".")
towns <- SpatialPoints(towns)
# Create sample polygon grid
grd <- GridTopology(c(1,1), c(10,10), c(10,10))
polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
plot(polys)
# Add towns (in red colour)
plot(towns, add = TRUE, col = 'red')
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#coveredPoints <- data.frame(lon = sample(100), lat = sample(100))
coveredPoints <- read.csv("~/git/SIA/locations.csv", header = TRUE, sep = ",", dec = ".")
coveredPoints <- SpatialPoints(coveredPoints)
# Create sample polygon grid
grd <- GridTopology(c(1,1), c(10,10), c(10,10))
polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
plot(polys)
# Add coveredPoints (in red colour)
plot(coveredPoints, col = 'red')
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#coveredPoints <- data.frame(lon = sample(100), lat = sample(100))
coveredPoints <- read.csv("~/git/SIA/locations.csv", header = TRUE, sep = ",", dec = ".")
coveredPoints <- SpatialPoints(coveredPoints)
# Create sample polygon grid
grd <- GridTopology(c(1,1), c(10,10), c(10,10))
polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
plot(polys)
# Add coveredPoints (in red colour)
plot(coveredPoints, col = 'red')
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#coveredPoints <- data.frame(lon = sample(100), lat = sample(100))
coveredPoints <- read.csv("~/git/SIA/locations.csv", header = TRUE, sep = ",", dec = ".")
coveredPoints <- SpatialPoints(coveredPoints)
# Create sample polygon grid
grd <- GridTopology(c(1,1), c(10,10), c(10,10))
polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
plot(polys)
# Add coveredPoints (in red colour)
plot(coveredPoints, col = 'red')
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#coveredPoints <- data.frame(lon = sample(100), lat = sample(100))
coveredPoints <- read.csv("~/git/SIA/locations.csv", header = TRUE, sep = ",", dec = ".")
coveredPoints <- SpatialPoints(coveredPoints)
# Create sample polygon grid
grd <- GridTopology(c(1,1), c(10,10), c(10,10))
polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
plot(polys)
# Add coveredPoints (in red colour)
plot(coveredPoints, col = 'red')
# Add coveredPoints (in red colour)
plot(coveredPoints, col = 'red')
# Add coveredPoints (in red colour)
plot(coveredPoints, col = 'red')
# Add coveredPoints (in red colour)
plot(coveredPoints, col = 'red')
library(plotrix)
locationsData = read.csv("~/git/SIA/locations.csv", header = TRUE, sep = ",", dec = ".")
resultData = read.csv("~/git/SIA/solution.csv", header = FALSE, sep = ",", dec = ".")
x = locationsData$x
y = locationsData$y
solution = resultData$V1
toImage = FALSE;
if(toImage) png("~/git/SIA/r/img.png", width=800, height=800)
# Graph the cars vector with all defaults
plot(x,y,pch=20, ylim=c(0,60), xlim=c(0,60))
range=10
#  for (i in 1:9){
#    points(x[i],y[i],col=rgb(1,0,0),pch=20)
#    rect(x[i]-range, y[i]-range, x[i]+range, y[i]+range, col=rgb(1,0,0,alpha =0.6),lty=1,lwd=0.3)
# }
for (i in 1:length(solution)){
if (solution[i]==1){
points(x[i],y[i],col=rgb(1,0,0),pch=20)
rect(x[i]-range, y[i]-range, x[i]+range, y[i]+range, col=rgb(1,0,0,alpha =0.6),lty=1,lwd=0.3)
#draw.circle(x[i],y[i],range,border="purple",col=rgb(1,0,0,alpha =0.6),lty=1,lwd=1)
}
}
if(toImage) dev.off()
# Add coveredPoints (in red colour)
plot(coveredPoints, col = 'red')
# Add coveredPoints (in red colour)
plot(coveredPoints, col = 'red')
# Add coveredPoints (in red colour)
plot(coveredPoints, col = 'red')
# Add coveredPoints (in red colour)
plot(coveredPoints, col = 'red')
View(coveredPoints)
View(coveredPoints)
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#coveredPoints <- data.frame(lon = sample(100), lat = sample(100))
coveredPoints <- read.csv("~/git/SIA/circularGrid.csv", header = TRUE, sep = ",", dec = ".")
coveredPoints <- SpatialPoints(coveredPoints)
# Create sample polygon grid
#grd <- GridTopology(c(1,1), c(10,10), c(10,10))
#polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
#plot(polys)
# Add coveredPoints (in red colour)
plot(coveredPoints, col = 'red')
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#coveredPoints <- data.frame(lon = sample(100), lat = sample(100))
coveredPoints <- read.csv("~/git/SIA/circularGrid.csv", header = TRUE, sep = ",", dec = ".")
coveredPoints <- SpatialPoints(coveredPoints)
# Create sample polygon grid
grd <- GridTopology(c(1,1), c(10,10), c(10,10))
#polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
#plot(polys)
# Add coveredPoints (in red colour)
plot(coveredPoints, col = 'red')
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#coveredPoints <- data.frame(lon = sample(100), lat = sample(100))
coveredPoints <- read.csv("~/git/SIA/circularGrid.csv", header = TRUE, sep = ",", dec = ".")
coveredPoints <- SpatialPoints(coveredPoints)
# Create sample polygon grid
grd <- GridTopology(c(1,1), c(10,10), c(10,10))
#polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
#plot(polys)
# Add coveredPoints (in red colour)
plot(coveredPoints, col = 'red')
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#coveredPoints <- data.frame(lon = sample(100), lat = sample(100))
coveredPoints <- read.csv("~/git/SIA/circularGrid.csv", header = TRUE, sep = ",", dec = ".")
coveredPoints <- SpatialPoints(coveredPoints)
# Create sample polygon grid
grd <- GridTopology(c(1,1), c(10,10), c(10,10))
polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
#plot(polys)
# Add coveredPoints (in red colour)
plot(coveredPoints, col = 'red')
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#coveredPoints <- data.frame(lon = sample(100), lat = sample(100))
coveredPoints <- read.csv("~/git/SIA/circularGrid.csv", header = TRUE, sep = ",", dec = ".")
coveredPoints <- SpatialPoints(coveredPoints)
# Create sample polygon grid
grd <- GridTopology(c(1,1), c(10,10), c(10,10))
polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
plot(polys)
# Add coveredPoints (in red colour)
plot(coveredPoints, col = 'red')
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#coveredPoints <- data.frame(lon = sample(100), lat = sample(100))
coveredPoints <- read.csv("~/git/SIA/circularGrid.csv", header = TRUE, sep = ",", dec = ".")
coveredPoints <- SpatialPoints(coveredPoints)
# Create sample polygon grid
grd <- GridTopology(c(1,1), c(10,10), c(10,10))
polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
plot(polys)
# Add coveredPoints (in red colour)
plot(coveredPoints, add=TRUE, col = 'red')
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#coveredPoints <- data.frame(lon = sample(100), lat = sample(100))
coveredPoints <- read.csv("~/git/SIA/circularGrid.csv", header = TRUE, sep = ",", dec = ".")
coveredPoints <- SpatialPoints(coveredPoints)
# Create sample polygon grid
#grd <- GridTopology(c(1,1), c(10,10), c(10,10))
#polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
#plot(polys)
# Add coveredPoints (in red colour)
plot(coveredPoints, col = 'red')
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#coveredPoints <- data.frame(lon = sample(100), lat = sample(100))
coveredPoints <- read.csv("~/git/SIA/circularGrid.csv", header = TRUE, sep = ",", dec = ".")
coveredPoints <- SpatialPoints(coveredPoints)
# Create sample polygon grid
#grd <- GridTopology(c(1,1), c(10,10), c(10,10))
#polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
#plot(polys)
# Add coveredPoints (in red colour)
plot(coveredPoints, col = 'red')
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#coveredPoints <- data.frame(lon = sample(100), lat = sample(100))
coveredPoints <- read.csv("~/git/SIA/circularGrid.csv", header = TRUE, sep = ",", dec = ".")
coveredPoints <- SpatialPoints(coveredPoints)
# Create sample polygon grid
#grd <- GridTopology(c(1,1), c(10,10), c(10,10))
#polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
#plot(polys)
# Add coveredPoints (in red colour)
plot(coveredPoints, col = 'red')
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#coveredPoints <- data.frame(lon = sample(100), lat = sample(100))
coveredPoints <- read.csv("~/git/SIA/circularGrid.csv", header = TRUE, sep = ",", dec = ".")
coveredPoints <- SpatialPoints(coveredPoints)
# Create sample polygon grid
#grd <- GridTopology(c(1,1), c(10,10), c(10,10))
#polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
#plot(polys)
# Add coveredPoints (in red colour)
plot(coveredPoints, col = 'red')
View(coveredPoints)
View(coveredPoints)
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#coveredPoints <- data.frame(lon = sample(100), lat = sample(100))
coveredPoints <- read.csv("~/git/SIA/circularGrid.csv", header = TRUE, sep = ",", dec = ".")
coveredPoints <- SpatialPoints(coveredPoints)
# Create sample polygon grid
#grd <- GridTopology(c(1,1), c(10,10), c(10,10))
#polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
#plot(polys)
# Add coveredPoints (in red colour)
plot(coveredPoints, col = 'red')
draw.circle(x[30],y[30],range,border="purple",col=rgb(1,0,0,alpha =0.6),lty=1,lwd=1)
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#coveredPoints <- data.frame(lon = sample(100), lat = sample(100))
coveredPoints <- read.csv("~/git/SIA/circularGrid.csv", header = TRUE, sep = ",", dec = ".")
coveredPoints <- SpatialPoints(coveredPoints)
# Create sample polygon grid
#grd <- GridTopology(c(1,1), c(10,10), c(10,10))
#polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
#plot(polys)
# Add coveredPoints (in red colour)
draw.circle(x[30],y[30],range,border="purple",col=rgb(1,0,0,alpha =0.6),lty=1,lwd=1)
plot(coveredPoints, col = 'red')
# Add coveredPoints (in red colour)
draw.circle(x[30],y[30],range,border="purple",col=rgb(1,0,0,alpha =0.6),lty=1,lwd=1)
plot(coveredPoints, col = 'red')
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#coveredPoints <- data.frame(lon = sample(100), lat = sample(100))
coveredPoints <- read.csv("~/git/SIA/circularGrid.csv", header = TRUE, sep = ",", dec = ".")
#coveredPoints <- SpatialPoints(coveredPoints)
# Create sample polygon grid
#grd <- GridTopology(c(1,1), c(10,10), c(10,10))
#polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
#plot(polys)
# Add coveredPoints (in red colour)
draw.circle(x[30],y[30],10,border="purple",col=rgb(1,0,0,alpha =0.6),lty=1,lwd=1)
plot(coveredPoints, col = 'red')
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#coveredPoints <- data.frame(lon = sample(100), lat = sample(100))
coveredPoints <- read.csv("~/git/SIA/circularGrid.csv", header = TRUE, sep = ",", dec = ".")
#coveredPoints <- SpatialPoints(coveredPoints)
# Create sample polygon grid
#grd <- GridTopology(c(1,1), c(10,10), c(10,10))
#polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
#plot(polys)
# Add coveredPoints (in red colour)
draw.circle(30,30,10,border="purple",col=rgb(1,0,0,alpha =0.6),lty=1,lwd=1)
plot(coveredPoints, col = 'red')
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#coveredPoints <- data.frame(lon = sample(100), lat = sample(100))
coveredPoints <- read.csv("~/git/SIA/circularGrid.csv", header = TRUE, sep = ",", dec = ".")
#coveredPoints <- SpatialPoints(coveredPoints)
# Create sample polygon grid
#grd <- GridTopology(c(1,1), c(10,10), c(10,10))
#polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
#plot(polys)
# Add coveredPoints (in red colour)
draw.circle(30,30,10,border="purple",col=rgb(1,0,0,alpha =0.6),lty=1,lwd=1)
plot(coveredPoints, col = 'red')
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#coveredPoints <- data.frame(lon = sample(100), lat = sample(100))
coveredPoints <- read.csv("~/git/SIA/circularGrid.csv", header = TRUE, sep = ",", dec = ".")
#coveredPoints <- SpatialPoints(coveredPoints)
# Create sample polygon grid
#grd <- GridTopology(c(1,1), c(10,10), c(10,10))
#polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
#plot(polys)
# Add coveredPoints (in red colour)
draw.circle(30,30,10,border="purple",col=rgb(1,0,0,alpha =0.6),lty=1,lwd=1)
plot(coveredPoints, col = 'red')
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#coveredPoints <- data.frame(lon = sample(100), lat = sample(100))
coveredPoints <- read.csv("~/git/SIA/circularGrid.csv", header = TRUE, sep = ",", dec = ".")
#coveredPoints <- SpatialPoints(coveredPoints)
# Create sample polygon grid
#grd <- GridTopology(c(1,1), c(10,10), c(10,10))
#polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
#plot(polys)
# Add coveredPoints (in red colour)
draw.circle(30,30,10,border="purple",col=rgb(1,0,0,alpha =0.6),lty=1,lwd=1)
plot(coveredPoints, col = 'red')
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#coveredPoints <- data.frame(lon = sample(100), lat = sample(100))
coveredPoints <- read.csv("~/git/SIA/circularGrid.csv", header = TRUE, sep = ",", dec = ".")
#coveredPoints <- SpatialPoints(coveredPoints)
# Create sample polygon grid
#grd <- GridTopology(c(1,1), c(10,10), c(10,10))
#polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
#plot(polys)
# Add coveredPoints (in red colour)
draw.circle(30,30,10,border="purple",col=rgb(1,0,0,alpha =0.6),lty=1,lwd=1)
plot(coveredPoints, col = 'red')
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#coveredPoints <- data.frame(lon = sample(100), lat = sample(100))
coveredPoints <- read.csv("~/git/SIA/circularGrid.csv", header = TRUE, sep = ",", dec = ".")
#coveredPoints <- SpatialPoints(coveredPoints)
# Create sample polygon grid
#grd <- GridTopology(c(1,1), c(10,10), c(10,10))
#polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
#plot(polys)
# Add coveredPoints (in red colour)
draw.circle(30,30,10,border="purple",col=rgb(1,0,0,alpha =0.6),lty=1,lwd=1)
plot(coveredPoints, col = 'red')
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#coveredPoints <- data.frame(lon = sample(100), lat = sample(100))
coveredPoints <- read.csv("~/git/SIA/circularGrid.csv", header = TRUE, sep = ",", dec = ".")
coveredPoints <- SpatialPoints(coveredPoints)
# Create sample polygon grid
#grd <- GridTopology(c(1,1), c(10,10), c(10,10))
#polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
#plot(polys)
# Add coveredPoints (in red colour)
draw.circle(30,30,10,border="purple",col=rgb(1,0,0,alpha =0.6),lty=1,lwd=1)
plot(coveredPoints, col = 'red')
# Load sp package for creating artificial data
library(sp)
# Create sample town points
#coveredPoints <- data.frame(lon = sample(100), lat = sample(100))
coveredPoints <- read.csv("~/git/SIA/circularGrid.csv", header = TRUE, sep = ",", dec = ".")
coveredPoints <- SpatialPoints(coveredPoints)
# Create sample polygon grid
grd <- GridTopology(c(1,1), c(10,10), c(10,10))
polys <- as.SpatialPolygons.GridTopology(grd)
# Plot polygons
plot(polys)
# Add coveredPoints (in red colour)
draw.circle(30,30,10,border="purple",col=rgb(1,0,0,alpha =0.6),lty=1,lwd=1)
plot(coveredPoints, col = 'red')
